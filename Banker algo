#include <stdio.h>  
  
int main() 
{ 
    
  
    int n, m, i, j, k; 
    n = 5;  
    m = 3; 
    int alloc[5][3] = { { 0, 1, 0 },  
                        { 2, 0, 0 },  
                        { 3, 0, 2 },  
                        { 2, 1, 1 }, 
                        { 0, 0, 2 }}; 
  
    int max[5][3] = { { 7, 5, 3 }, 
                    { 3, 2, 2 },  
                    { 9, 0, 2 }, 
                    { 2, 2, 2 }, 
                    { 4, 3, 3 } };
  
    int avail[3] = { 3, 3, 2 }; 
  
    int f[n], ans[n], ind = 0; 
    for (k = 0; k < n; k++) { 
        f[k] = 0; 
    } 
    int need[n][m]; 
    for (i = 0; i < n; i++) { 
        for (j = 0; j < m; j++) 
            need[i][j] = max[i][j] - alloc[i][j]; 
    } 
    int y = 0; 
    for (k = 0; k < 5; k++) { 
        for (i = 0; i < n; i++) { 
            if (f[i] == 0) { 
  
                int flag = 0; 
                for (j = 0; j < m; j++) { 
                    if (need[i][j] > avail[j]){ 
                        flag = 1; 
                        break; 
                    } 
                } 
  
                if (flag == 0) { 
                    ans[ind++] = i; 
                    for (y = 0; y < m; y++) 
                        avail[y] += alloc[i][y]; 
                    f[i] = 1; 
                } 
            } 
        } 
    } 
  
    printf("\tFollowing is the SAFE Sequence\n" ); 
    for (i = 0; i < n - 1; i++) 
        printf(" \tP%d -->", ans[i] ); 
    printf( " P%d ", ans[n - 1] ); 
    printf(" \n\nProcess");
    printf(" \tAllocation");
	printf(" \tMax_need");
	printf(" \tAvailable");
	printf(" \tRemaining_need\n");
	printf("  \t\t   A B C\t A B C\t\t A B C \t\t  A B C");   
	printf(" \n P0\t\t   %d %d %d\t %d %d %d\t\t 3 3 2\t\t  %d %d %d ",alloc[0][0],alloc[0][1],alloc[0][2],max[0][0],max[0][1],max[0][2],need[0][0],need[0][1],need[0][2]);
	printf(" \n P1\t\t   %d %d %d\t %d %d %d\t\t 5 3 2\t\t  %d %d %d ",alloc[1][0],alloc[1][1],alloc[1][2],max[1][0],max[1][1],max[1][2],need[1][0],need[1][1],need[1][2]);
	printf(" \n P2\t\t   %d %d %d\t %d %d %d\t\t 7 4 3\t\t  %d %d %d ",alloc[2][0],alloc[2][1],alloc[2][2],max[2][0],max[2][1],max[2][2],need[2][0],need[2][1],need[2][2]);
	printf(" \n P3\t\t   %d %d %d\t %d %d %d\t\t 7 4 5\t\t  %d %d %d ",alloc[3][0],alloc[3][1],alloc[3][2],max[3][0],max[3][1],max[3][2],need[3][0],need[3][1],need[3][2]);
	printf(" \n P4\t\t   %d %d %d\t %d %d %d\t\t 7 5 5\t\t  %d %d %d ",alloc[4][0],alloc[4][1],alloc[4][2],max[4][0],max[4][1],max[4][2],need[4][0],need[4][1],need[4][2]);
	printf(" \t\t\t\t\t\t\t\t\t\t\t 10 5 7 ");
	return (0); 
} 
